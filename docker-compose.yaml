version: '3.8'

x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - airflow.env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./config:/opt/airflow/config # if you have airflow.cfg customizations beyond env vars
    # Mount Python modules if imported by DAGs and not part of the image
    - ./etls:/opt/airflow/etls
    - ./pipelines:/opt/airflow/pipelines
    - ./utils:/opt/airflow/utils
    # - ./tests:/opt/airflow/tests # Not usually needed for runtime
  user: "${AIRFLOW_UID:-999}"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airflow_reddit
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "airflow_reddit"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 768M

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    # No entrypoint override - use the default from the image
    command:
      - bash # The Airflow entrypoint will execute this command
      - -c
      - |
        if ! airflow db check-migrations -t 60; then
          echo "Database not initialized. Initializing..."
          airflow db upgrade # This initializes and upgrades
          airflow users create \
            --username admin \
            --firstname admin \
            --lastname admin \
            --role Admin \
            --email airflow@airflow.com \
            --password admin
        else
          echo "Database already initialized."
        fi
    restart: "no"
    deploy:
      resources:
        limits:
          cpus: '0.75' # Increased slightly for init
          memory: 1G   # Increased for db operations

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G # Reduced slightly, can increase if UI is slow

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $(hostname) --limit 1 --allow-multiple"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0' # Reduced slightly, LocalExecutor tasks run here
          memory: 1.5G # Reduced slightly

volumes:
  postgres_db_volume: